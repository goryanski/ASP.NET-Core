01: Лекция: Введение, Middleware, Map, статус коды для определения ошибок или успеха, вывод информации на страницу(html)
	Практика: вывод ul-списка на экран, нажатию на ссылку переход по пути где отображается инфо выбранного пользователя 
02: Лекция: DependencyInjection (создание и регистрация сервиса для его использования), работа с cookie, сессии, хранение данных в хранилище context.Items 
03: Лекция: паттерн MVC - Model View Conroller использование с описанием, доступ к куки в представдениях
	Практика: todo list с CRUD операциями, передача параметров с контроллера в представление и т.д.
04: Лекция: Блокировка товара по нажатию чекбокса на товаре. Карточки с товарами с бутстрапа
	3 способа получения сервиса через DependencyInjection
	input type="hidden" для скрытой отправки данных(о пользователе и т.д.) на сервер
    Практика: мини интернет-магазин с CRUD операциями, поиск продукта по названию GET запросом, 
		дополненно из дз 05: загрузка фото продукта на сервер (валидация продукта в инпутах при помощи регулярок - имя, описание, цена, рейтинг, проверка на налл (атрибут required))
		дополненно из дз 05: редактирование продукта с загруженным фото (удаление старого загруженного фото)
		дополненно из дз 06: корзина с продуктами (хранение в сессии), группировка продуктов в корзине с возможностью добавлять/вычитать кол-во (без проверок)
05: Загрузка фото за сервер и скачивание от туда. добавление бользователя с возможностью загрузить для него фото. Основное описание в PeopleController
	Скачивание файла с сервера 
	Практика: в предыдущей дз 
06: Описание в ProductsController: имитация базы данных, передача параметра в ссылке с атрибутами вместо href, 
		добавляем корзин на сайт, храним продукты в сессии когда помещаем их в корзину, группировка продуктов в корзине 
		Получение сервиса в представлении 
	Практика: в 04 дз 
07: Описание в Startup: атрибуты маршрутизации (что бы делать маршруты(url) более компактными), 
		Области (Areas) - для независимых частей сайта 
	Практика: разработайте структуру для сайта "Новости" с доп областями: dashboard, admin, user. Для каждой области добавьте Layout и главную страницу
		дополненно из дз 08: добавление и настройка DataBase и использованием примитивной многоуровневой архитектуры и автомаппера
08: DataBase in ASP.
	Практика: в дз 07
09: Html-helpers - генерируем Html-разметку методами (описание Views/Home/Index). 
	Лекция: ListBox(как в wpf), выпадающий список, формы, ссылки, инпуты сделанные с помощью Html-helpers. Строготипизированные хелперы (на основе каких-то моделей. объяснение Views/Products/CreateNewProduct)
		автогенерирование представления на основе какой-то модели - скриншот в уроке
	Практика: дз 04 переделать, используя Html-helpers
10: Validation. Описание Models/Home/CreateElementViewModel и Controllers/HomeController.
		Валидация на стороне клиента и на стороне сервера. 
		Атрибуты для валидации (создание собственного), 
		Классы для валидации (создание собственного), 
		Самовалидация модели(метов в самой модели, в котором можно проверить все поля сразу) Отключение javascript in google chrome (ctrl + shift + p) и пишем disable javascript
	Практика: валидация для вход/регистрацию/забыл пароль. 
		валидация на стороне сервера и на стороне клиента (атрибуты)
		передача параметров между controllers actions 
11:  Авторизация и аутентификация. 
	Лекция: Basic authentication и Аутентификация на основе куки. Login, Logout
	Практика: приложение ToDoList. авторизация/аутентифкация. вход/регистрация. БД. У каждого пользователя свои задачи, которые только он может изменять после авторизации
12: ASP.NET Core Identity - готовая авторизация (её настройка и изменение) (Описание в Startup)
13: Web API. Описание - ProductsController. 
	Практика: Создание API для библиотеки книг с БД и CRUD операции в нем, а так же различные способы поиска по разным критериям
14: Авторизация при помощи JWT токена (для АPI. Описание в Startup)
	Практика: авторизация для предыдущего дз
15: SignalR для чатов (Описание в Startup). WebSocket 
	*Cloud. Practice: многопользовательский чат + личные сообщения + сообщения накапливаются если открыт другой диалог + авторизация через куки + все хнарится в БД (таблицы для чата связанны)
16: Продолжение прошлой темы. описание авторизации на куки. более подробное описание работы с чатом
	Дополнительно - использование нескольких хабов, как делать игру на канвасе (описание GameHub)
  	*Cloud. Practice: Реализовать игру "Крестики-Нолики" (SignalR, WebSocket)
17: Onion Architecture in ASP.NET Core
	Там же шаблон с готовым проектом на архитектуре
18: Продолжение прошлого урока - добавляем в архитектуру API. Открываем проект так же, описание Infrastructure/Presentation/Startup. и так же описание работы в уроке, структура - в практике
	Swagger - настройка и использование
	Сors - настройка доступа из других доменов к нашему ресурсу (АПИ)
	ExceptionHandlingMiddleware - Middleware который будет перехватывать любое исключение
	Практика - продолжение прошлой
19: Локализация - перевод содержимого сайта на различные языки (Описание в Startup)
	Практика: добавление и отображение описаний мишин с разным переводом (БД на минималках), отправка пост-запроса из js
20: Exam